make all --print-data-base --no-builtin-variables --no-builtin-rules --question
make: *** No rule to make target 'all'.  Stop.

# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Thu Jul 14 10:11:32 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
DESKTOP_SESSION = plasma
# default
.SHELLFLAGS := -c
# environment
XDG_SESSION_CLASS = user
# environment
SNAP_COMMON = /var/snap/code/common
# environment
XDG_SESSION_TYPE = x11
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'Makefile', line 17)
IMAGE_REPO := ngcs-dev-tools01.arsysdesarrollo.lan:5000
# makefile (from 'Makefile', line 9)
CMD_TEST := sh /root/bootstrap.sh; npm run test
# automatic
@D = $(patsubst %/,%,$(dir $@))
# environment
XAUTHORITY = /home/aasanchez/.Xauthority
# automatic
@F = $(notdir $@)
# default
MAKE_VERSION := 4.2.1
# makefile
CURDIR := /home/aasanchez/VueTraining/curso-vue3
# makefile
SHELL = /bin/sh
# environment
SNAP_DATA = /var/snap/code/101
# environment
VSCODE_NLS_CONFIG = {"locale":"en","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /snap/code/101/usr/share/code/code
# environment
QT_AUTO_SCREEN_SCALE_FACTOR = 0
# environment
XDG_CONFIG_DIRS = /etc/xdg/xdg-plasma:/etc/xdg:/usr/share/kubuntu-default-settings/kf5-settings
# environment
SNAP_INSTANCE_NAME = code
# environment
SNAP_ARCH = amd64
# makefile (from 'Makefile', line 1)
MYNAME := aasanchez
# makefile (from 'Makefile', line 10)
CMD_TDD := sh /root/bootstrap.sh; npm run tdd
# makefile (from '.env', line 1)
MAKEFILE_LIST :=  Makefile .env
# 'override' directive
GNUMAKEFLAGS := 
# makefile (from 'Makefile', line 13)
CMD_TEST_FUNCTIONAL := sh /root/bootstrap.sh; npm run test:functional
# environment
XDG_DATA_DIRS = /usr/share/plasma:/usr/local/share:/usr/share:/var/lib/snapd/desktop
# environment
DBUS_SESSION_BUS_ADDRESS = unix:path=/run/user/1000/bus
# makefile (from 'Makefile', line 2)
VERSION := `node -pe "require('./package.json').version"`
# environment
QT_SCREEN_SCALE_FACTORS = eDP-1=1;DP-1=1;HDMI-1=1;DP-2=1;HDMI-2=1;
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /home/aasanchez
# environment
PAM_KWALLET5_LOGIN = /run/user/1000/kwallet5.socket
# environment
XDG_SESSION_PATH = /org/freedesktop/DisplayManager/Session1
# environment
GSETTINGS_SCHEMA_DIR = /snap/code/101/usr/share/glib-2.0/schemas
# makefile (from 'Makefile', line 11)
CMD_TEST_UNIT := sh /root/bootstrap.sh; npm run test:unit
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/local/games:/usr/java/jre1.8.0_121/bin:/snap/bin
# environment
GPG_AGENT_INFO = /run/user/1000/gnupg/S.gpg-agent:0:1
# environment
XCURSOR_THEME = breeze_cursors
# environment
SESSION_MANAGER = local/LLL-147602:@/tmp/.ICE-unix/1179,unix/LLL-147602:/tmp/.ICE-unix/1179
# environment
XDG_RUNTIME_DIR = /run/user/1000
# environment
GDK_PIXBUF_MODULE_FILE = /home/aasanchez/snap/code/common/.cache/gdk-pixbuf-loaders.cache
# environment
SNAP = /snap/code/101
# makefile (from '.env', line 1)
VERSION_VARIABLE = 1.0.0
# environment
SNAP_VERSION = b06ae3b2
# makefile (from 'Makefile', line 8)
CMD_BUILD_DEV := sh /root/bootstrap.sh; npm run build:dev
# environment
DISABLE_WAYLAND = 1
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
GDK_PIXBUF_MODULEDIR = /snap/code/101/usr/lib/x86_64-linux-gnu/gdk-pixbuf-2.0/2.10.0/loaders
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = 
# environment
XDG_SESSION_DESKTOP = KDE
# environment
SSH_AUTH_SOCK = /tmp/ssh-sdbo0qH0mlso/agent.1082
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# makefile (from 'Makefile', line 7)
CMD_BUILD := sh /root/bootstrap.sh; npm run build
# makefile (from '.env', line 3)
IMAGE = ngcs-dev-tools01.arsysdesarrollo.lan:5000/gta-ci:latest
# environment
SNAP_INSTANCE_KEY = 
# environment
PWD = /home/aasanchez/VueTraining/curso-vue3
# environment
KDE_SESSION_VERSION = 5
# default
.LOADED := 
# environment
XDG_SEAT = seat0
# environment
SSH_AGENT_PID = 1126
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = KDE
# makefile (from 'Makefile', line 16)
CMD_USER_PERMISSIONS := sh /root/bootstrap.sh; chmod -R 777 .
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/aasanchez
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
VSCODE_CLI = 1
# environment
VSCODE_CODE_CACHE_PATH = /home/aasanchez/.config/Code/CachedData/b06ae3b2d2dbfe28bca3134cc6be65935cdfea6a
# environment
LOGNAME = aasanchez
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
SNAP_LIBRARY_PATH = /var/lib/snapd/lib/gl:/var/lib/snapd/lib/gl32:/var/lib/snapd/void
# environment
SNAP_CONTEXT = bHyjKU8HmonV4uWvyCaRPyfg7ht6pCHgjyntL_z5ijujakU6MkbZ
# environment
KDE_FULL_SESSION = true
# environment
ELECTRON_NO_ATTACH_CONSOLE = 1
# environment
SNAP_USER_COMMON = /home/aasanchez/snap/code/common
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
XDG_VTNR = 1
# environment
MAKELEVEL := 0
# environment
SNAP_REAL_HOME = /home/aasanchez
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SNAP_USER_DATA = /home/aasanchez/snap/code/101
# environment
SHLVL = 0
# makefile (from 'Makefile', line 14)
CMD_ROOT_PERMISSIONS := sh /root/bootstrap.sh; chown -R root:root .
# environment
JAVA_HOME = /usr/java/jre1.8.0_121
# environment
XDG_SESSION_ID = 3
# environment
USER = aasanchez
# environment
SNAP_REVISION = 101
# makefile
.DEFAULT_GOAL := check
# environment
XDG_CURRENT_DESKTOP = KDE
# makefile (from 'Makefile', line 3)
NAME := `node -pe "require('./package.json').name"`
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 12)
CMD_TEST_INTEGRATION := sh /root/bootstrap.sh; npm run test:integration
# makefile (from 'Makefile', line 4)
FOLDER := /home/aasanchez/VueTraining/curso-vue3/
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# environment
LANGUAGE = 
# environment
XDG_SEAT_PATH = /org/freedesktop/DisplayManager/Seat0
# environment
VSCODE_IPC_HOOK = /run/user/1000/vscode-3823052d-1.69.1-main.sock
# environment
BAMF_DESKTOP_FILE_HINT = /var/lib/snapd/desktop/applications/code_code.desktop
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
GDK_BACKEND = x11
# automatic
+F = $(notdir $+)
# makefile (from '.env', line 2)
NAME_VARIABLE = vue3
# environment
QT_ACCESSIBILITY = 1
# 'override' directive
.SHELLSTATUS := 0
# default
MAKEFILES := 
# environment
SNAP_COOKIE = bHyjKU8HmonV4uWvyCaRPyfg7ht6pCHgjyntL_z5ijujakU6MkbZ
# makefile (from 'Makefile', line 5)
BOOTSTRAP := sh /root/bootstrap.sh
# automatic
<F = $(notdir $<)
# environment
SNAP_NAME = code
# makefile (from 'Makefile', line 18)
IMAGE_VERSION := latest
# makefile (from 'Makefile', line 6)
CMD_INSTALL := sh /root/bootstrap.sh; npm install --legacy-peer-deps
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
SNAP_REEXEC = 
# environment
CHROME_DESKTOP = code-url-handler.desktop
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
VSCODE_PID = 7055
# environment
KDE_SESSION_UID = 1000
# variable set hash-table stats:
# Load=133/1024=13%, Rehash=0, Collisions=18/177=10%
 

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 66306, inode 11542670): 20 files, no impossibilities.

# 20 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: check boot root-permissions user-permissions reset-permissions clean-environment install-ci install build build-dev test tdd test-unit test-integration test-functional interactive start-up destroy
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

reset-permissions:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 53):
	@sudo chown -R $$(whoami):$$(whoami) ${FOLDER}

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-07-05 13:46:58.893526965
#  File has been updated.
#  Successfully updated.

test: start-up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 91):
	@docker exec container-${NAME_VARIABLE}-${VERSION_VARIABLE} /bin/bash -c '${CMD_TEST}'
	@$(MAKE) destroy
	@$(MAKE) user-permissions

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 79):
	@docker run --rm --name install-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project ${IMAGE} /bin/bash -c '${CMD_BUILD}'
	@$(MAKE) user-permissions

root-permissions:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 45):
	@docker run --rm --name install-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project ${IMAGE} /bin/bash -c '${CMD_ROOT_PERMISSIONS}'

test-unit: start-up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 104):
	@docker exec container-${NAME_VARIABLE}-${VERSION_VARIABLE} /bin/bash -c '${CMD_TEST_UNIT}'
	@$(MAKE) destroy

# Not a target:
.env:
#  Implicit rule search has been done.
#  Last modified 2022-07-05 13:28:13.686477308
#  File has been updated.
#  Successfully updated.

tdd: start-up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 98):
	@docker exec container-${NAME_VARIABLE}-${VERSION_VARIABLE} /bin/bash -c '${CMD_TDD}'
	@$(MAKE) destroy

clean-environment:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 58):
	rm -rf node_modules

build-dev:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 85):
	@docker run --rm --name install-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project ${IMAGE} /bin/bash -c '${CMD_BUILD_DEV}'
	@$(MAKE) user-permissions

user-permissions:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	@docker run --rm --name install-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project ${IMAGE} /bin/bash -c '${CMD_USER_PERMISSIONS}'

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

interactive:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 126):
	@docker run --rm --name interactive-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project -i -t ${IMAGE} /bin/bash

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 36):
	@rm -rf .env

destroy: boot
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 136):
	@docker-compose down

start-up: boot
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 131):
	@docker-compose up -d

install-ci:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 67):
	@$(MAKE) root-permissions
	@docker run --rm --name install-${NAME_VARIABLE}-${VERSION_VARIABLE} -v ${FOLDER}:/root/project ${IMAGE} /bin/bash -c '${CMD_INSTALL}'
	@$(MAKE) user-permissions

boot:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 33):
	@if [ ! -f .env ]; then echo "VERSION_VARIABLE=${VERSION}\nNAME_VARIABLE=${NAME}\nIMAGE=${IMAGE}" > .env; fi

check:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
 
#  File has not been updated.

test-integration: start-up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 110):
	@docker exec container-${NAME_VARIABLE}-${VERSION_VARIABLE} /bin/bash -c '${CMD_TEST_INTEGRATION}'
	@$(MAKE) destroy

test-functional: start-up
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 116):
	@docker exec container-${NAME_VARIABLE}-${VERSION_VARIABLE} /bin/bash -c '${CMD_TEST_FUNCTIONAL}'
	@$(MAKE) destroy

install: clean-environment
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 74):
	@$(MAKE) install-ci

# files hash-table stats:
# Load=25/1024=2%, Rehash=0, Collisions=0/97=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 45 / storage = 458 B / avg = 10 B
# current buf: size = 8162 B / used = 458 B / count = 45 / avg = 10 B

# strcache performance: lookups = 131 / hit rate = 65%
# hash-table stats:
# Load=45/8192=1%, Rehash=0, Collisions=1/131=1%
# Finished Make data base on Thu Jul 14 10:11:32 2022

 
